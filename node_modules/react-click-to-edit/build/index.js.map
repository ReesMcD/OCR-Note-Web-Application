{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react'\nimport './styles.css'\n\nconst makeContentEditable = (WrappedComponent) => class extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: props.children,\n      onEditMode: false,\n    }\n    this.getIntoEditMode = this.getIntoEditMode.bind(this)\n    this.handleEnterKey = this.handleEnterKey.bind(this)\n    this.getOffEditMode = this.getOffEditMode.bind(this)\n    this.changeValue = this.changeValue.bind(this)\n  }\n  getIntoEditMode() {\n    this.setState({\n      ...this.state,\n      onEditMode: true,\n    })\n  }\n  getOffEditMode() {\n    this.setState({\n      ...this.state,\n      onEditMode: false,\n    })\n    if (this.props.endEditing) {\n      this.props.endEditing(this.state.value)\n    }\n  }\n  handleEnterKey(e) {\n    if(e.keyCode === 13 || e.charCode == 13){\n      this.setState({\n        ...this.state,\n        onEditMode: false,\n      })\n      if (this.props.endEditing) {\n        this.props.endEditing(this.state.value)\n      }\n    }\n  }\n  changeValue(e) {\n    this.setState({\n      ...this.state,\n      value: e.target.value,\n    })\n  }\n  render() {\n    const { customStyle } = this.props\n    return (\n      <section\n        styleName='wrapper'\n        className={customStyle || ''}\n        onClick={this.getIntoEditMode} >\n        {\n          (this.state.onEditMode) ? (\n            <input\n               type='text'\n               autoFocus\n               value={this.state.value}\n               styleName='input'\n               onChange={this.changeValue}\n               onKeyPress={this.handleEnterKey}\n               onBlur={this.getOffEditMode}\n             />\n          ) : (\n            <span\n              styleName='text'\n            >{this.state.value}</span>\n          )\n        }\n      </section>\n    )\n  }\n}\n\nconst labelize = (props) => <section>{props.children}</section>\n\nconst ClickToEdit = makeContentEditable(labelize)\n\nexport default ClickToEdit\n"],"names":["makeContentEditable","WrappedComponent","props","state","children","getIntoEditMode","bind","handleEnterKey","getOffEditMode","changeValue","setState","endEditing","value","e","keyCode","charCode","target","customStyle","onEditMode","React","Component","labelize","ClickToEdit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,sBAAsB,SAAtBA,mBAAsB,CAACC,gBAAD;;;;oBACdC,KAAZ,EAAmB;;;iHACXA,KADW;;YAEZC,KAAL,GAAa;eACJD,MAAME,QADF;oBAEC;OAFd;YAIKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;YACKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,OAAtB;YACKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,OAAtB;YACKG,WAAL,GAAmB,MAAKA,WAAL,CAAiBH,IAAjB,OAAnB;;;;;;wCAEgB;aACXI,QAAL,cACK,KAAKP,KADV;sBAEc;;;;;uCAGC;aACVO,QAAL,cACK,KAAKP,KADV;sBAEc;;YAEV,KAAKD,KAAL,CAAWS,UAAf,EAA2B;eACpBT,KAAL,CAAWS,UAAX,CAAsB,KAAKR,KAAL,CAAWS,KAAjC;;;;;qCAGWC,CA3BW,EA2BR;YACbA,EAAEC,OAAF,KAAc,EAAd,IAAoBD,EAAEE,QAAF,IAAc,EAArC,EAAwC;eACjCL,QAAL,cACK,KAAKP,KADV;wBAEc;;cAEV,KAAKD,KAAL,CAAWS,UAAf,EAA2B;iBACpBT,KAAL,CAAWS,UAAX,CAAsB,KAAKR,KAAL,CAAWS,KAAjC;;;;;;kCAIMC,CAtCc,EAsCX;aACRH,QAAL,cACK,KAAKP,KADV;iBAESU,EAAEG,MAAF,CAASJ;;;;;+BAGX;YACCK,WADD,GACiB,KAAKf,KADtB,CACCe,WADD;;eAGL;;;wBAEaA,eAAe,EAA1B,IAAWA,eAAe,EAA1B,yCAFF;qBAGW,KAAKZ,eAHhB;eAKUF,KAAL,CAAWe,UAAZ,GACE;kBACQ,MADR;2BAAA;mBAGU,KAAKf,KAAL,CAAWS,KAHrB;uBAIa,0EAJb;sBAKa,KAAKH,WALlB;wBAMe,KAAKF,cANpB;oBAOW,KAAKC;YARlB,GAWE;;;yBACY;;iBACLL,KAAL,CAAWS;;SAnBrB;;;;IA9C4DO,MAAMC,SAA1C;CAA5B;;AAyEA,IAAMC,WAAW,SAAXA,QAAW,CAACnB,KAAD;SAAW;;;UAAgBE;GAA3B;CAAjB;;AAEA,IAAMkB,cAActB,oBAAoBqB,QAApB,CAApB;;;;"}